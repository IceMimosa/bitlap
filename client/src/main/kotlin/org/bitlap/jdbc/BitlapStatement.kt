package org.bitlap.jdbc

import com.alipay.sofa.jraft.rpc.impl.cli.CliClientServiceImpl
import java.sql.*

/**
 * Bitlap Statement
 *
 * @author 梦境迷离
 * @since 2021/6/6
 * @version 1.0
 */
class BitlapStatement() : Statement {

    private lateinit var session: JdbcSessionState
    private lateinit var cli: CliClientServiceImpl

    constructor(session: JdbcSessionState, cli: CliClientServiceImpl) : this() {
        this.session = session
        this.cli = cli
    }

    override fun <T : Any?> unwrap(iface: Class<T>?): T {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun isWrapperFor(iface: Class<*>?): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun close() {
        TODO("Not yet implemented")
    }

    override fun executeQuery(sql: String?): ResultSet {
        TODO("Not yet implemented")
    }

    override fun executeUpdate(sql: String?): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun executeUpdate(sql: String?, autoGeneratedKeys: Int): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun executeUpdate(sql: String?, columnIndexes: IntArray?): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun executeUpdate(sql: String?, columnNames: Array<out String>?): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getMaxFieldSize(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun setMaxFieldSize(max: Int) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getMaxRows(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun setMaxRows(max: Int) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun setEscapeProcessing(enable: Boolean) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getQueryTimeout(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun setQueryTimeout(seconds: Int) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun cancel() {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getWarnings(): SQLWarning {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun clearWarnings() {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun setCursorName(name: String?) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun execute(sql: String?): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun execute(sql: String?, autoGeneratedKeys: Int): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun execute(sql: String?, columnIndexes: IntArray?): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun execute(sql: String?, columnNames: Array<out String>?): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getResultSet(): ResultSet {
        TODO("Not yet implemented")
    }

    override fun getUpdateCount(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getMoreResults(): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getMoreResults(current: Int): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun setFetchDirection(direction: Int) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getFetchDirection(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun setFetchSize(rows: Int) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getFetchSize(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getResultSetConcurrency(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getResultSetType(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun addBatch(sql: String?) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun clearBatch() {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun executeBatch(): IntArray {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getConnection(): Connection {
        TODO("Not yet implemented")
    }

    override fun getGeneratedKeys(): ResultSet {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun getResultSetHoldability(): Int {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun isClosed(): Boolean {
        TODO("Not yet implemented")
    }

    override fun setPoolable(poolable: Boolean) {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun isPoolable(): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun closeOnCompletion() {
        throw SQLFeatureNotSupportedException("Method not supported")
    }

    override fun isCloseOnCompletion(): Boolean {
        throw SQLFeatureNotSupportedException("Method not supported")
    }
}
